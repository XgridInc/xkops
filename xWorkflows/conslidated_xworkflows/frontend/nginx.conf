# server {
#     listen 80;

#     # Serve the React frontend
#     location / {
#         root /usr/share/nginx/html;
#         try_files $uri /index.html;
#     }

#     # Proxy /get_savings to Flask backend
#     location /get_savings {
#         proxy_pass http://xkops-backend-svc:5000/get_savings;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         # Add CORS headers
#         add_header 'Access-Control-Allow-Origin' '*' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        
#         # Handle preflight requests (for CORS)
#         if ($request_method = OPTIONS) {
#             add_header 'Access-Control-Allow-Origin' '*';
#             add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#             add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
#             add_header 'Access-Control-Max-Age' 1728000;
#             return 204;
#         }
#     }
# }

server {
    listen 80;

    # Serve the React frontend
    location / {
        root /usr/share/nginx/html;
        try_files $uri /index.html;
    }

    # Proxy all requests starting with /api/ to Flask backend
    location /api/ {
        rewrite ^/api/(.*)$ /$1 break;  # Strip /api/ prefix
        proxy_pass http://xkops-backend-svc:5000;  # Proxy to backend Flask service
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;

        # Handle preflight (OPTIONS) requests for CORS
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            return 204;
        }
    }
}

